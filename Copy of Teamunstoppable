{"cells":[{"cell_type":"markdown","metadata":{"id":"kRGhceju-3cL"},"source":["### Data Science Creativity and Innovation Challenge Group(TEAM_UNSTOPPABLE) Assignment 2024### **\n","\n","\n","1.   PETER MADANHA R219038J\n","\n","2.  MICHAEL RUWIZHI R219035Q\n","\n","3. GABRIEL MACHINGURA R219040S\n","\n","4. GIVEN CHUMA R215926F\n","5. SORI T LUCKMORE R215901Y\n","6. NHIDZA TANAKA R219044F\n","7. PHARES CHIWENGA R215914Z\n","8. OSMEN MUSEWE R151357X\n","9. CHRISTAGE MUPEMHI R207231B\n","10. ROSEMARY MTAPE R207100N\n","\n","## 1.1 Explanation Of The Data##\n","The purpose of this innovation challenge is to predict a person's cholera status using cholera symptoms and also analysing the 2023/2024 cholera infections in Harare using machine learning and deep learning  techniques.\n","\n","##1.2 Data Source##\n","The data was collected from Rowan  Martins at City of Harare Department ( Health Information Office(608), qnanyanga@gmail.com)\n","\n","##1.3 Data Features Or Attributes##\n","The dataset contains the following features\n","\n","\n","\n","1. No. - this a tested person Id which unique for each person.    \n","2.  Name - full-name of the tested person\n","3. Age of a tested person\n","4. Sex- gender of the tested person\n","   whether a person is a male or female\n","5. Hosp- name of hospital where the\n","  person was tested for cholera\n","6. surbub- area wnhere a tested person\n","   stays\n","7. Section - the exact area of surbub\n","    where a person stays\n","8. Address- a tested person's physical\n","   home address.\n","9. District- district of residence of  \n","   the tested person.\n","10. date Of onset- the day a when the\n","   sickness started.\n","\n","11. date of admission\n","12. Diarhoea- where the person was       diarhoea infected or not.\n","13. headache - where a person had headache or not\n","14. Vomiting- whether person was vomiting\n","15. Abdominal Pain- whether a person had a stomach pain\n","16. dehydration- was the person lossing water through feaces\n","17. Constipation- whether a person was affected by constipation\n","18. other- other symptoms experienced by a tested person\n","19. Case status- whether a person is found positive or not after a test\n","20. Vaccination status- whether the person was vaccinated or not\n","21. Days B4 coming to HF-  number of days of sickness before coming to hospital\n","22. Year\n","  \n","\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":31717,"status":"ok","timestamp":1733178098492,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"bsSGXO0MdNUM","outputId":"8938ee85-d41d-4f57-a504-4adad736dc68"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","metadata":{"id":"nM0OvcM0YD4U"},"source":["##Objectives Of the Analysis##\n","the main objective of this analysis is to develop a machine learning model that predict a person's cholera infection status using symptoms of cholera. The sub objectives are:\n","\n","\n","1.   To find  the groups and hotspot areas which are more vulnerable to cholera so that will advice the health departments on which groups to put more focus when addressing the issues of cholera.\n","\n","2. To find the effectiveness of the cholera vaccinne through comparing the number of people vaccinated who were infected and those who were not vaccinated.\n","\n","3. To come up with data driven insights that will help the city of harare in  resource allocation in the future cholera prevention.\n","\n","4. To develop, evaluate and delpoy a predictive machine learning model for predicting person cholera status.\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":50909,"status":"ok","timestamp":1733245459094,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"MdeueB_Q99mq","outputId":"388f0b9a-2a90-4553-83fd-09f1eb93c6fe"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["# mounting  my drive/ making connections\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"ucdOCv9M7FKy","executionInfo":{"status":"ok","timestamp":1733245472276,"user_tz":-120,"elapsed":4216,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# importing necessary libraries for data cleaning  and exploratory data analysis\n","\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import  StandardScaler\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.linear_model import LogisticRegression\n","import seaborn as sns\n","import warnings\n","plt.style.use('ggplot')\n","%matplotlib inline\n","\n","# Ignore warnings\n","warnings.filterwarnings(\"ignore\")"]},{"cell_type":"markdown","metadata":{"id":"BZ4csbyS6pJc"},"source":["**Loading the Harare cholera linelist Dataset**"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":672},"executionInfo":{"elapsed":1196,"status":"ok","timestamp":1733245476762,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"A7oaAyW_1cHW","outputId":"b68f84f3-ec70-415a-b3d6-9e1b465cc4ad"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Unnamed: 0                      No  \\\n","0        NaN  ZIM-HRE-HRE-2023-00001   \n","1        NaN  ZIM-HRE-HRE-2023-00002   \n","2        NaN  ZIM-HRE-HRE-2023-00003   \n","3        NaN  ZIM-HRE-HRE-2023-00004   \n","4        NaN  ZIM-HRE-HRE-2023-00005   \n","\n","                                       Name Age Sex   Hosp     Suburb   \\\n","0                             Wright Zireni  45   M  BRIDH      Hopley   \n","1                 Evangelista Chibandamabwe  30   F  BRIDH  Southlands   \n","2                      Jane Lovejoy Muchoko  23   F  BRIDH  Stoneridge   \n","3                            Juliet Mucheka  39   F  BRIDH     Granary   \n","4  Tafadza Musaiti Contact to Jane  Muchoko  30   F  BRIDH  Stoneridge   \n","\n","      SECTION                    Address  District  ...  \\\n","0      Zone 5  Hopley zone 5 rising star  Southern  ...   \n","1  Southlands                 Southlands  Southern  ...   \n","2  Stoneridge            1694 Stoneridge  Southern  ...   \n","3     Granary               377 Granary   Northern  ...   \n","4  Stoneridge            1694 Stoneridge  Southern  ...   \n","\n","                  Culture Results            Outcome Outcome Date  \\\n","0  Vibrio Cholerae Ogawa Positive         Discharged          NaN   \n","1  Vibrio Cholerae Ogawa Positive         Discharged          NaN   \n","2  Vibrio Cholerae Ogawa Positive         Discharged          NaN   \n","3  Vibrio Cholerae Ogawa Positive         Discharged          NaN   \n","4  Vibrio Cholerae Ogawa Positive  Contact not sick           NaN   \n","\n","  Vacc Status OCV If Died place of Death Contact number Comments Week no.  \\\n","0      Not Stated                    NaN     Not stated      NaN       38   \n","1      Not Stated                    NaN     Not stated      NaN       39   \n","2      Not Stated                    NaN     Not stated      NaN       39   \n","3      Not Stated                    NaN     Not stated      NaN       39   \n","4      Not Stated                    NaN     Not stated      NaN       39   \n","\n","  Days B4 coming to HF  Year  \n","0                    1  2023  \n","1                    4  2023  \n","2                    2  2023  \n","3                    2  2023  \n","4                    0  2023  \n","\n","[5 rows x 34 columns]"],"text/html":["\n","  <div id=\"df-7f8178a6-723d-46ed-a0df-2a36672e1723\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>No</th>\n","      <th>Name</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Hosp</th>\n","      <th>Suburb</th>\n","      <th>SECTION</th>\n","      <th>Address</th>\n","      <th>District</th>\n","      <th>...</th>\n","      <th>Culture Results</th>\n","      <th>Outcome</th>\n","      <th>Outcome Date</th>\n","      <th>Vacc Status OCV</th>\n","      <th>If Died place of Death</th>\n","      <th>Contact number</th>\n","      <th>Comments</th>\n","      <th>Week no.</th>\n","      <th>Days B4 coming to HF</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-00001</td>\n","      <td>Wright Zireni</td>\n","      <td>45</td>\n","      <td>M</td>\n","      <td>BRIDH</td>\n","      <td>Hopley</td>\n","      <td>Zone 5</td>\n","      <td>Hopley zone 5 rising star</td>\n","      <td>Southern</td>\n","      <td>...</td>\n","      <td>Vibrio Cholerae Ogawa Positive</td>\n","      <td>Discharged</td>\n","      <td>NaN</td>\n","      <td>Not Stated</td>\n","      <td>NaN</td>\n","      <td>Not stated</td>\n","      <td>NaN</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2023</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-00002</td>\n","      <td>Evangelista Chibandamabwe</td>\n","      <td>30</td>\n","      <td>F</td>\n","      <td>BRIDH</td>\n","      <td>Southlands</td>\n","      <td>Southlands</td>\n","      <td>Southlands</td>\n","      <td>Southern</td>\n","      <td>...</td>\n","      <td>Vibrio Cholerae Ogawa Positive</td>\n","      <td>Discharged</td>\n","      <td>NaN</td>\n","      <td>Not Stated</td>\n","      <td>NaN</td>\n","      <td>Not stated</td>\n","      <td>NaN</td>\n","      <td>39</td>\n","      <td>4</td>\n","      <td>2023</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-00003</td>\n","      <td>Jane Lovejoy Muchoko</td>\n","      <td>23</td>\n","      <td>F</td>\n","      <td>BRIDH</td>\n","      <td>Stoneridge</td>\n","      <td>Stoneridge</td>\n","      <td>1694 Stoneridge</td>\n","      <td>Southern</td>\n","      <td>...</td>\n","      <td>Vibrio Cholerae Ogawa Positive</td>\n","      <td>Discharged</td>\n","      <td>NaN</td>\n","      <td>Not Stated</td>\n","      <td>NaN</td>\n","      <td>Not stated</td>\n","      <td>NaN</td>\n","      <td>39</td>\n","      <td>2</td>\n","      <td>2023</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-00004</td>\n","      <td>Juliet Mucheka</td>\n","      <td>39</td>\n","      <td>F</td>\n","      <td>BRIDH</td>\n","      <td>Granary</td>\n","      <td>Granary</td>\n","      <td>377 Granary</td>\n","      <td>Northern</td>\n","      <td>...</td>\n","      <td>Vibrio Cholerae Ogawa Positive</td>\n","      <td>Discharged</td>\n","      <td>NaN</td>\n","      <td>Not Stated</td>\n","      <td>NaN</td>\n","      <td>Not stated</td>\n","      <td>NaN</td>\n","      <td>39</td>\n","      <td>2</td>\n","      <td>2023</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-00005</td>\n","      <td>Tafadza Musaiti Contact to Jane  Muchoko</td>\n","      <td>30</td>\n","      <td>F</td>\n","      <td>BRIDH</td>\n","      <td>Stoneridge</td>\n","      <td>Stoneridge</td>\n","      <td>1694 Stoneridge</td>\n","      <td>Southern</td>\n","      <td>...</td>\n","      <td>Vibrio Cholerae Ogawa Positive</td>\n","      <td>Contact not sick</td>\n","      <td>NaN</td>\n","      <td>Not Stated</td>\n","      <td>NaN</td>\n","      <td>Not stated</td>\n","      <td>NaN</td>\n","      <td>39</td>\n","      <td>0</td>\n","      <td>2023</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 34 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f8178a6-723d-46ed-a0df-2a36672e1723')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7f8178a6-723d-46ed-a0df-2a36672e1723 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7f8178a6-723d-46ed-a0df-2a36672e1723');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4e93ce4d-7225-4fba-9b42-6abf1d0c8aa8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e93ce4d-7225-4fba-9b42-6abf1d0c8aa8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4e93ce4d-7225-4fba-9b42-6abf1d0c8aa8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":4}],"source":["# prompt: loading harare_cholera_linelist1.csv dataset\n","\n","\n","data = pd.read_csv('/content/drive/MyDrive/harare_cholera_linelist.csv', header=0, sep=';', on_bad_lines='skip')\n","\n","\n","data.head()"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":672},"executionInfo":{"elapsed":439,"status":"ok","timestamp":1733245481763,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"1HzuH6q16K_n","outputId":"a66c16c5-a693-4138-c79c-feefc83e5355"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0                      No                 Name Age Sex   Hosp  \\\n","10287        NaN  ZIM-HRE-HRE-2023-10288          Stanley Tom  30   M  BRIDH   \n","10288        NaN  ZIM-HRE-HRE-2023-10289          Yuda Keziya  73   F  BRIDH   \n","10289        NaN  ZIM-HRE-HRE-2023-10290  Sharon Matengambiri  26   F  BRIDH   \n","10290        NaN  ZIM-HRE-HRE-2023-10291           Owen Nyika  31   M  BRIDH   \n","10291        NaN  ZIM-HRE-HRE-2023-10292       Tinashe Kazawu  20   M  BRIDH   \n","\n","             Suburb         SECTION                        Address  \\\n","10287       Budiriro    Budiriro 5B              9492 Budiriror 5B   \n","10288  Out of Harare    Chitungwiza  1329B New Zengeza Chitungwiza   \n","10289      Kuwadzana    Kuwadzana 2               7787 Kuwadzana 2   \n","10290     Waterfalls        Retreat        Waterfalls Retreat Park   \n","10291            CBD  Charge Office        charge Office Destitute   \n","\n","            District  ... Culture Results   Outcome Outcome Date  \\\n","10287        Western  ...             NaN  Admitted          NaN   \n","10288  Out of Harare  ...             NaN  Admitted          NaN   \n","10289       Northern  ...             NaN  Admitted          NaN   \n","10290       Southern  ...             NaN  Admitted          NaN   \n","10291       Southern  ...             NaN  Admitted          NaN   \n","\n","      Vacc Status OCV If Died place of Death Contact number Comments Week no.  \\\n","10287    Unvaccinated                    NaN     0786062603      NaN       19   \n","10288    Unvaccinated                    NaN     0773277071      NaN       19   \n","10289    Unvaccinated                    NaN     0776977051      NaN       19   \n","10290    Unvaccinated                    NaN     0775285043      NaN       19   \n","10291    Unvaccinated                    NaN     Not Stated      NaN       19   \n","\n","      Days B4 coming to HF  Year  \n","10287                    2  2024  \n","10288                    0  2024  \n","10289                    0  2024  \n","10290                    0  2024  \n","10291                    0  2024  \n","\n","[5 rows x 34 columns]"],"text/html":["\n","  <div id=\"df-f7ae96a5-89f8-4249-ada7-53af795377ae\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>No</th>\n","      <th>Name</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Hosp</th>\n","      <th>Suburb</th>\n","      <th>SECTION</th>\n","      <th>Address</th>\n","      <th>District</th>\n","      <th>...</th>\n","      <th>Culture Results</th>\n","      <th>Outcome</th>\n","      <th>Outcome Date</th>\n","      <th>Vacc Status OCV</th>\n","      <th>If Died place of Death</th>\n","      <th>Contact number</th>\n","      <th>Comments</th>\n","      <th>Week no.</th>\n","      <th>Days B4 coming to HF</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10287</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-10288</td>\n","      <td>Stanley Tom</td>\n","      <td>30</td>\n","      <td>M</td>\n","      <td>BRIDH</td>\n","      <td>Budiriro</td>\n","      <td>Budiriro 5B</td>\n","      <td>9492 Budiriror 5B</td>\n","      <td>Western</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>Admitted</td>\n","      <td>NaN</td>\n","      <td>Unvaccinated</td>\n","      <td>NaN</td>\n","      <td>0786062603</td>\n","      <td>NaN</td>\n","      <td>19</td>\n","      <td>2</td>\n","      <td>2024</td>\n","    </tr>\n","    <tr>\n","      <th>10288</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-10289</td>\n","      <td>Yuda Keziya</td>\n","      <td>73</td>\n","      <td>F</td>\n","      <td>BRIDH</td>\n","      <td>Out of Harare</td>\n","      <td>Chitungwiza</td>\n","      <td>1329B New Zengeza Chitungwiza</td>\n","      <td>Out of Harare</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>Admitted</td>\n","      <td>NaN</td>\n","      <td>Unvaccinated</td>\n","      <td>NaN</td>\n","      <td>0773277071</td>\n","      <td>NaN</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>2024</td>\n","    </tr>\n","    <tr>\n","      <th>10289</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-10290</td>\n","      <td>Sharon Matengambiri</td>\n","      <td>26</td>\n","      <td>F</td>\n","      <td>BRIDH</td>\n","      <td>Kuwadzana</td>\n","      <td>Kuwadzana 2</td>\n","      <td>7787 Kuwadzana 2</td>\n","      <td>Northern</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>Admitted</td>\n","      <td>NaN</td>\n","      <td>Unvaccinated</td>\n","      <td>NaN</td>\n","      <td>0776977051</td>\n","      <td>NaN</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>2024</td>\n","    </tr>\n","    <tr>\n","      <th>10290</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-10291</td>\n","      <td>Owen Nyika</td>\n","      <td>31</td>\n","      <td>M</td>\n","      <td>BRIDH</td>\n","      <td>Waterfalls</td>\n","      <td>Retreat</td>\n","      <td>Waterfalls Retreat Park</td>\n","      <td>Southern</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>Admitted</td>\n","      <td>NaN</td>\n","      <td>Unvaccinated</td>\n","      <td>NaN</td>\n","      <td>0775285043</td>\n","      <td>NaN</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>2024</td>\n","    </tr>\n","    <tr>\n","      <th>10291</th>\n","      <td>NaN</td>\n","      <td>ZIM-HRE-HRE-2023-10292</td>\n","      <td>Tinashe Kazawu</td>\n","      <td>20</td>\n","      <td>M</td>\n","      <td>BRIDH</td>\n","      <td>CBD</td>\n","      <td>Charge Office</td>\n","      <td>charge Office Destitute</td>\n","      <td>Southern</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>Admitted</td>\n","      <td>NaN</td>\n","      <td>Unvaccinated</td>\n","      <td>NaN</td>\n","      <td>Not Stated</td>\n","      <td>NaN</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>2024</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 34 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7ae96a5-89f8-4249-ada7-53af795377ae')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f7ae96a5-89f8-4249-ada7-53af795377ae button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f7ae96a5-89f8-4249-ada7-53af795377ae');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8abc0a92-be4c-4a2c-bb54-a86148fb130e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8abc0a92-be4c-4a2c-bb54-a86148fb130e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8abc0a92-be4c-4a2c-bb54-a86148fb130e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":5}],"source":["# viewing the bottom 5 rows of the data\n","data.tail()"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":885,"status":"ok","timestamp":1733245491063,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"R1oWMThL8b8B","outputId":"bce72f27-df60-4618-b964-1824ec901a07"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10292, 34)"]},"metadata":{},"execution_count":6}],"source":["#checking shape of the data\n","data.shape"]},{"cell_type":"markdown","metadata":{"id":"Cb7gZnYP8ssg"},"source":["The data has 33 features and 10292 entries"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1733245491803,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"JyFZsuXU9BE3","outputId":"b3d33740-ffb9-41e7-903e-aad100c73bb5"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10292 entries, 0 to 10291\n","Data columns (total 34 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   Unnamed: 0              56 non-null     object \n"," 1   No                      10292 non-null  object \n"," 2   Name                    10292 non-null  object \n"," 3   Age                     10292 non-null  object \n"," 4   Sex                     10292 non-null  object \n"," 5   Hosp                    10244 non-null  object \n"," 6   Suburb                  10292 non-null  object \n"," 7   SECTION                 10292 non-null  object \n"," 8   Address                 10287 non-null  object \n"," 9   District                10292 non-null  object \n"," 10  Date of Onset           10292 non-null  object \n"," 11  Date of Admission/seen  10292 non-null  object \n"," 12  Diarrhoea               9983 non-null   object \n"," 13  Headache                561 non-null    object \n"," 14  Vomiting                4886 non-null   object \n"," 15  GBW/GBM                 895 non-null    object \n"," 16  Abdominal Pain/Cramps   921 non-null    object \n"," 17  Dehydration             5824 non-null   object \n"," 18  LOA                     125 non-null    object \n"," 19  Constipation            0 non-null      float64\n"," 20  Other                   287 non-null    object \n"," 21  Case status             10292 non-null  object \n"," 22  Specimen                10100 non-null  object \n"," 23  RDT Results             49 non-null     object \n"," 24  Culture Results         1075 non-null   object \n"," 25  Outcome                 10182 non-null  object \n"," 26  Outcome Date            2524 non-null   object \n"," 27  Vacc Status OCV         10234 non-null  object \n"," 28  If Died place of Death  67 non-null     object \n"," 29  Contact number          10270 non-null  object \n"," 30  Comments                4 non-null      object \n"," 31  Week no.                10292 non-null  int64  \n"," 32  Days B4 coming to HF    10292 non-null  int64  \n"," 33  Year                    10292 non-null  int64  \n","dtypes: float64(1), int64(3), object(30)\n","memory usage: 2.7+ MB\n"]}],"source":["# checking information for the whole dataset\n","data.info()"]},{"cell_type":"markdown","metadata":{"id":"AE9E1E4nA2fS"},"source":["##Data Clearning##\n","Checking for missing values and updating them using appropriate methods depending on the feature, dropping some features like person name which are not to be used in our analysis since they are sensetive. This stage will also check for inconsistences in data and also get rid of them. This stage is the most crutial one because the effectiveness of this analysis depends more on data quality so data clearning is the process of improving the quality of data inorder to improve the performnce and accuracy of the machine learning model to be developed."]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1733245498879,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"_CB5xKoREHRg","outputId":"0a5e4d89-cf35-4044-efe2-4295070e2aee"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0                 object\n","No                         object\n","Name                       object\n","Age                        object\n","Sex                        object\n","Hosp                       object\n","Suburb                     object\n","SECTION                    object\n","Address                    object\n","District                   object\n","Date of Onset              object\n","Date of Admission/seen     object\n","Diarrhoea                  object\n","Headache                   object\n","Vomiting                   object\n","GBW/GBM                    object\n","Abdominal Pain/Cramps      object\n","Dehydration                object\n","LOA                        object\n","Constipation              float64\n","Other                      object\n","Case status                object\n","Specimen                   object\n","RDT Results                object\n","Culture Results            object\n","Outcome                    object\n","Outcome Date               object\n","Vacc Status OCV            object\n","If Died place of Death     object\n","Contact number             object\n","Comments                   object\n","Week no.                    int64\n","Days B4 coming to HF        int64\n","Year                        int64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>No</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Hosp</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Suburb</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>SECTION</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Address</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>District</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Date of Onset</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Date of Admission/seen</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Diarrhoea</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Headache</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Vomiting</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>GBW/GBM</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Abdominal Pain/Cramps</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Dehydration</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>LOA</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Constipation</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Other</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Case status</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Specimen</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>RDT Results</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Culture Results</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome Date</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Vacc Status OCV</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>If Died place of Death</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Contact number</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Comments</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Week no.</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Days B4 coming to HF</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Year</th>\n","      <td>int64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":8}],"source":["# checking for datatypes for each column\n","data.dtypes"]},{"cell_type":"markdown","metadata":{"id":"Z6OEfIOxIo7V"},"source":["The feature age is an object and it should be an integer so it need to be transformed and the dates are also objects also need to be transformed."]},{"cell_type":"code","execution_count":9,"metadata":{"id":"TkNYIk-lId0x","executionInfo":{"status":"ok","timestamp":1733245504825,"user_tz":-120,"elapsed":402,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# Converting 'Age' column to numeric\n","data['Age'] = pd.to_numeric(data['Age'], errors='coerce')"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1733245506165,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"gBD1vS-yOkjg","outputId":"3cf3764e-5b3b-4802-96d1-4f6975cbea0a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0                 object\n","No                         object\n","Name                       object\n","Age                       float64\n","Sex                        object\n","Hosp                       object\n","Suburb                     object\n","SECTION                    object\n","Address                    object\n","District                   object\n","Date of Onset              object\n","Date of Admission/seen     object\n","Diarrhoea                  object\n","Headache                   object\n","Vomiting                   object\n","GBW/GBM                    object\n","Abdominal Pain/Cramps      object\n","Dehydration                object\n","LOA                        object\n","Constipation              float64\n","Other                      object\n","Case status                object\n","Specimen                   object\n","RDT Results                object\n","Culture Results            object\n","Outcome                    object\n","Outcome Date               object\n","Vacc Status OCV            object\n","If Died place of Death     object\n","Contact number             object\n","Comments                   object\n","Week no.                    int64\n","Days B4 coming to HF        int64\n","Year                        int64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>No</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Hosp</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Suburb</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>SECTION</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Address</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>District</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Date of Onset</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Date of Admission/seen</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Diarrhoea</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Headache</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Vomiting</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>GBW/GBM</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Abdominal Pain/Cramps</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Dehydration</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>LOA</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Constipation</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Other</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Case status</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Specimen</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>RDT Results</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Culture Results</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome Date</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Vacc Status OCV</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>If Died place of Death</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Contact number</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Comments</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Week no.</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Days B4 coming to HF</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Year</th>\n","      <td>int64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":10}],"source":["#checking if the datatype has converted\n","data.dtypes"]},{"cell_type":"markdown","metadata":{"id":"IOtaknVRPBMx"},"source":["Age has converted to numeric form"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"3VW4nqqUPgnE","executionInfo":{"status":"ok","timestamp":1733245513339,"user_tz":-120,"elapsed":407,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# Converting 'Date of Admission/seen' and 'Date of Onset' to datetime objects\n","data['Date of Admission/seen'] = pd.to_datetime(data['Date of Admission/seen'], errors='coerce')\n","data['Date of Onset'] = pd.to_datetime(data['Date of Onset'], errors='coerce')"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1733245514433,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"AKi37Ac-QMTd","outputId":"d3174c9d-71c0-4f38-a5c0-c314dda68775"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0                        object\n","No                                object\n","Name                              object\n","Age                              float64\n","Sex                               object\n","Hosp                              object\n","Suburb                            object\n","SECTION                           object\n","Address                           object\n","District                          object\n","Date of Onset             datetime64[ns]\n","Date of Admission/seen    datetime64[ns]\n","Diarrhoea                         object\n","Headache                          object\n","Vomiting                          object\n","GBW/GBM                           object\n","Abdominal Pain/Cramps             object\n","Dehydration                       object\n","LOA                               object\n","Constipation                     float64\n","Other                             object\n","Case status                       object\n","Specimen                          object\n","RDT Results                       object\n","Culture Results                   object\n","Outcome                           object\n","Outcome Date                      object\n","Vacc Status OCV                   object\n","If Died place of Death            object\n","Contact number                    object\n","Comments                          object\n","Week no.                           int64\n","Days B4 coming to HF               int64\n","Year                               int64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>No</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Hosp</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Suburb</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>SECTION</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Address</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>District</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Date of Onset</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>Date of Admission/seen</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>Diarrhoea</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Headache</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Vomiting</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>GBW/GBM</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Abdominal Pain/Cramps</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Dehydration</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>LOA</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Constipation</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Other</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Case status</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Specimen</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>RDT Results</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Culture Results</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome Date</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Vacc Status OCV</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>If Died place of Death</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Contact number</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Comments</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Week no.</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Days B4 coming to HF</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Year</th>\n","      <td>int64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":12}],"source":["#checking datatypes\n","data.dtypes"]},{"cell_type":"markdown","metadata":{"id":"ga3reQ6JQfAa"},"source":["the data types are now converted into correct datatypes"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"BthQNN7Kkwsd","executionInfo":{"status":"ok","timestamp":1733245521974,"user_tz":-120,"elapsed":429,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# dropping Unwanted columns\n","data= data.drop(['No', 'Name',  'Address',\"Hosp\" ,'Comments',\"Contact number\",\"Week no.\",\"Outcome Date\",\"Outcome\",\"Culture Results\",\"RDT Results\",\"Date of Onset\",\n","\"Date of Admission/seen\", \"LOA\",\"GBW/GBM\",\"Other\", \"SECTION\", 'Year'], axis= 1)"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1733245523132,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"8PT4FMGkWxwd","outputId":"ea32f0e9-55c6-44a1-84ab-f33521941329"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Unnamed: 0', 'Age', 'Sex', 'Suburb ', 'District', 'Diarrhoea',\n","       'Headache', 'Vomiting', 'Abdominal Pain/Cramps', 'Dehydration',\n","       'Constipation', 'Case status', 'Specimen', 'Vacc Status OCV',\n","       'If Died place of Death', 'Days B4 coming to HF'],\n","      dtype='object')"]},"metadata":{},"execution_count":14}],"source":["#  viewing columns of the data\n","\n","data.columns"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":447,"status":"ok","timestamp":1733245533308,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"WrnAunxxabs1","outputId":"12d8623f-2b7c-41ff-a03a-aa5c12116bfa"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10292, 16)"]},"metadata":{},"execution_count":15}],"source":["#checking the shape of data after dropping columns\n","data.shape"]},{"cell_type":"markdown","metadata":{"id":"Hl08m1h-cBFo"},"source":["Now the data has 15 features and 10292 rows or data enteries"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1733245534819,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"2Xer8JShcO4n","outputId":"2fba89cb-be48-4354-83d2-b7fb9857fe38"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0                10236\n","Age                         408\n","Sex                           0\n","Suburb                        0\n","District                      0\n","Diarrhoea                   309\n","Headache                   9731\n","Vomiting                   5406\n","Abdominal Pain/Cramps      9371\n","Dehydration                4468\n","Constipation              10292\n","Case status                   0\n","Specimen                    192\n","Vacc Status OCV              58\n","If Died place of Death    10225\n","Days B4 coming to HF          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>10236</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>408</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Suburb</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>District</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Diarrhoea</th>\n","      <td>309</td>\n","    </tr>\n","    <tr>\n","      <th>Headache</th>\n","      <td>9731</td>\n","    </tr>\n","    <tr>\n","      <th>Vomiting</th>\n","      <td>5406</td>\n","    </tr>\n","    <tr>\n","      <th>Abdominal Pain/Cramps</th>\n","      <td>9371</td>\n","    </tr>\n","    <tr>\n","      <th>Dehydration</th>\n","      <td>4468</td>\n","    </tr>\n","    <tr>\n","      <th>Constipation</th>\n","      <td>10292</td>\n","    </tr>\n","    <tr>\n","      <th>Case status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Specimen</th>\n","      <td>192</td>\n","    </tr>\n","    <tr>\n","      <th>Vacc Status OCV</th>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>If Died place of Death</th>\n","      <td>10225</td>\n","    </tr>\n","    <tr>\n","      <th>Days B4 coming to HF</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":16}],"source":["#checking for missing values\n","data.isnull().sum()"]},{"cell_type":"markdown","metadata":{"id":"zTjNIti3c8wD"},"source":["our data has missing values so now we need to address this issue using the appropriate method. For the features Headache\twith 9731, Vomiting\twith 5406,Abdominal Pain/Cramps\twith 9371, Dehydration with\t4468\n","and Constipation with 10225 only \"yes\" responses were recorded and for \"no\" they were left blank, so all missing field to be replaced by \"no\". For the other Feature with few missing fields we just drop all missing fields since the dont have any effect to our dataset if dropped."]},{"cell_type":"code","execution_count":17,"metadata":{"id":"zv_XBf2zgnMa","executionInfo":{"status":"ok","timestamp":1733245542258,"user_tz":-120,"elapsed":505,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# Fill missing values in specifie columns with 'No'\n","columns_to_fill = ['Headache', 'Vomiting', 'Abdominal Pain/Cramps', 'Dehydration', 'Constipation',\"If Died place of Death\"]\n","data[columns_to_fill] = data[columns_to_fill].fillna('No')"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1733245543733,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"tfsBG5IchGpw","outputId":"631e69b2-82c0-4001-e278-86aa1891f755"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0                10236\n","Age                         408\n","Sex                           0\n","Suburb                        0\n","District                      0\n","Diarrhoea                   309\n","Headache                      0\n","Vomiting                      0\n","Abdominal Pain/Cramps         0\n","Dehydration                   0\n","Constipation                  0\n","Case status                   0\n","Specimen                    192\n","Vacc Status OCV              58\n","If Died place of Death        0\n","Days B4 coming to HF          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>10236</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>408</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Suburb</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>District</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Diarrhoea</th>\n","      <td>309</td>\n","    </tr>\n","    <tr>\n","      <th>Headache</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Vomiting</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Abdominal Pain/Cramps</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Dehydration</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Constipation</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Case status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Specimen</th>\n","      <td>192</td>\n","    </tr>\n","    <tr>\n","      <th>Vacc Status OCV</th>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>If Died place of Death</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Days B4 coming to HF</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":18}],"source":["#checking for missing values again\n","data.isnull().sum()"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":327},"executionInfo":{"elapsed":442,"status":"ok","timestamp":1733245550959,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"bUokEDwohnKL","outputId":"d71268e1-3c7a-4782-c000-74d083c644f6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Unnamed: 0   Age Sex     Suburb   District Diarrhoea Headache Vomiting  \\\n","0        NaN  45.0   M      Hopley  Southern       Yes       No      Yes   \n","1        NaN  30.0   F  Southlands  Southern       Yes       No       No   \n","2        NaN  23.0   F  Stoneridge  Southern       Yes       No      yes   \n","3        NaN  39.0   F     Granary  Northern       Yes       No       No   \n","4        NaN  30.0   F  Stoneridge  Southern       Yes       No       No   \n","\n","  Abdominal Pain/Cramps Dehydration Constipation       Case status Specimen  \\\n","0                   Yes         Yes           No  Positive Culture    Stool   \n","1                    No          No           No  Positive Culture    Stool   \n","2                    No          No           No  Positive Culture    Stool   \n","3                    No          No           No  Positive Culture    Stool   \n","4                    No          No           No  Positive Culture    Stool   \n","\n","  Vacc Status OCV If Died place of Death  Days B4 coming to HF  \n","0      Not Stated                     No                     1  \n","1      Not Stated                     No                     4  \n","2      Not Stated                     No                     2  \n","3      Not Stated                     No                     2  \n","4      Not Stated                     No                     0  "],"text/html":["\n","  <div id=\"df-953bdf13-566a-4526-824d-dc6ea1ac500d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Suburb</th>\n","      <th>District</th>\n","      <th>Diarrhoea</th>\n","      <th>Headache</th>\n","      <th>Vomiting</th>\n","      <th>Abdominal Pain/Cramps</th>\n","      <th>Dehydration</th>\n","      <th>Constipation</th>\n","      <th>Case status</th>\n","      <th>Specimen</th>\n","      <th>Vacc Status OCV</th>\n","      <th>If Died place of Death</th>\n","      <th>Days B4 coming to HF</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>45.0</td>\n","      <td>M</td>\n","      <td>Hopley</td>\n","      <td>Southern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Positive Culture</td>\n","      <td>Stool</td>\n","      <td>Not Stated</td>\n","      <td>No</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>30.0</td>\n","      <td>F</td>\n","      <td>Southlands</td>\n","      <td>Southern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Positive Culture</td>\n","      <td>Stool</td>\n","      <td>Not Stated</td>\n","      <td>No</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>23.0</td>\n","      <td>F</td>\n","      <td>Stoneridge</td>\n","      <td>Southern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Positive Culture</td>\n","      <td>Stool</td>\n","      <td>Not Stated</td>\n","      <td>No</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","      <td>39.0</td>\n","      <td>F</td>\n","      <td>Granary</td>\n","      <td>Northern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Positive Culture</td>\n","      <td>Stool</td>\n","      <td>Not Stated</td>\n","      <td>No</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>30.0</td>\n","      <td>F</td>\n","      <td>Stoneridge</td>\n","      <td>Southern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Positive Culture</td>\n","      <td>Stool</td>\n","      <td>Not Stated</td>\n","      <td>No</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-953bdf13-566a-4526-824d-dc6ea1ac500d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-953bdf13-566a-4526-824d-dc6ea1ac500d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-953bdf13-566a-4526-824d-dc6ea1ac500d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-28cb0e0d-a67d-4d40-bf73-bcaf653d49f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28cb0e0d-a67d-4d40-bf73-bcaf653d49f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-28cb0e0d-a67d-4d40-bf73-bcaf653d49f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 10292,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"1st Episode\",\n          \"?Duplicate\",\n          \"?? Readmission\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.458073485197072,\n        \"min\": 1.0,\n        \"max\": 105.0,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          64.0,\n          8.0,\n          102.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Suburb \",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"Milton Park\",\n          \"Budiriro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"District\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Southern\",\n          \"Northern\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Diarrhoea\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"yes\",\n          \"Yea\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Headache\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Yes\",\n          \"Yes \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vomiting\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Abdominal Pain/Cramps\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"No\",\n          \"Yes \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dehydration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Yes\",\n          \"severe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Constipation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Case status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Negative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Specimen\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Stool\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vacc Status OCV\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Unvaccinated\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"If Died place of Death\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Parirenyatwa Hosp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Days B4 coming to HF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 21,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}],"source":["#viewing the dataset\n","data.head()"]},{"cell_type":"markdown","metadata":{"id":"8cK-2Cx3h2Jr"},"source":["the missing fields are now updated for some features now we need to drop those missing fields left."]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"executionInfo":{"elapsed":443,"status":"ok","timestamp":1733245561232,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"e99Y9E2UiFQI","outputId":"fc600d55-2757-473f-ba4c-938b5139dfe3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0                0\n","Age                       0\n","Sex                       0\n","Suburb                    0\n","District                  0\n","Diarrhoea                 0\n","Headache                  0\n","Vomiting                  0\n","Abdominal Pain/Cramps     0\n","Dehydration               0\n","Constipation              0\n","Case status               0\n","Specimen                  0\n","Vacc Status OCV           0\n","If Died place of Death    0\n","Days B4 coming to HF      0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Suburb</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>District</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Diarrhoea</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Headache</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Vomiting</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Abdominal Pain/Cramps</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Dehydration</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Constipation</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Case status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Specimen</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Vacc Status OCV</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>If Died place of Death</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Days B4 coming to HF</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":20}],"source":["#drop missing data in the dataset\n","data = data.dropna()\n","\n","# Check for missing values again to confirm\n","data.isnull().sum()"]},{"cell_type":"markdown","metadata":{"id":"j4qf7DI6ifGR"},"source":["our data now has no missing fields\n"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":603,"status":"ok","timestamp":1733245569698,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"Yl-NrY5iinad","outputId":"334579a8-4577-48dd-a153-a42b9768a222"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(56, 16)"]},"metadata":{},"execution_count":21}],"source":["data.shape"]},{"cell_type":"markdown","metadata":{"id":"DEpDIK0yitY8"},"source":["after dropping some missing fields our data now has 15 columns and 9497 entries which is still ok for analysis. Now lets check for inconsistences in our data"]},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1733245571088,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"7mN8sRwkjAvR","outputId":"8dc216cf-75f6-4ac0-889f-d85feadb037a"},"outputs":[{"output_type":"stream","name":"stdout","text":["['F' 'M']\n"]}],"source":["# check for inconsistences in the data\n","\n","# Check for inconsistencies in the 'Sex' column\n","print(data['Sex'].unique())"]},{"cell_type":"markdown","metadata":{"id":"iC-d4dKJj0-7"},"source":["there are no inconsistences in the sex column"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":492,"status":"ok","timestamp":1733245577478,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"myIlWF3TjVSY","outputId":"8deed352-6258-4c7b-c13d-60fcb4c89764"},"outputs":[{"output_type":"stream","name":"stdout","text":["['Suspected' 'Positive Culture' 'Suspected ']\n"]}],"source":["# Check for inconsistencies in the 'Case status' column\n","print(data['Case status'].unique())"]},{"cell_type":"markdown","metadata":{"id":"CxQBwoZCkIIx"},"source":["there are incostitences in our data so lets correct them"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1733245579073,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"X0NA9r7y3axW","outputId":"d45f42d1-e569-4397-96f4-45a5f5727ed3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Unique values in 'Diarrhoea': ['yes' 'Yes' 'Yes ']\n","Unique values in 'Vacc Status OCV': ['Unvaccinated' 'Vaccinated']\n","Unique values in 'Vomiting': ['No' 'Yes' 'yes' 'Yes ']\n","Unique values in 'Constipation': ['No']\n","Unique values in 'Abdominal Pain/Cramps': ['No' 'Yes']\n","Unique values in 'Dehydration': ['No' 'Yes' 'Severe' 'Moderate' 'Mild' 'Moderate ']\n"]}],"source":["#checking for inconsistences in the data\n","for col in ['Diarrhoea', 'Vacc Status OCV', 'Vomiting', 'Constipation', 'Abdominal Pain/Cramps',\"Dehydration\"]:\n","    print(f\"Unique values in '{col}': {data[col].unique()}\")"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"42IVGOutGXIw","executionInfo":{"status":"ok","timestamp":1733245581526,"user_tz":-120,"elapsed":395,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["data['Dehydration'] = data['Dehydration'].replace(['Moderate', 'Mild' ,'Mild ' ,' Mild ',\n"," 'Moderate ' ,'Severe ' ,'moderate ', 'mild', 'severe ', 'Severe' ,'Mod',\n"," 'Modarate' ,'severe' ,'Modete','yes','Yes',\"YES\"], 'Yes')"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"drRVzpDB_YQF","executionInfo":{"status":"ok","timestamp":1733245587921,"user_tz":-120,"elapsed":406,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# handling inconsistences in data\n","data['Case status'] = data['Case status'].replace(['Suspected', 'Suspected '], 'Negative')\n","\n","data['Case status'] = data['Case status'].replace('MCS not done', 'Negative')"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"e2pXme0I2q_Z","executionInfo":{"status":"ok","timestamp":1733245589467,"user_tz":-120,"elapsed":2,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# Replace values in 'Diarrhoea' column\n","data['Diarrhoea'] = data['Diarrhoea'].replace(['Yes', 'yes ',\"Yea\",'yes' ,'yES',\"Y3s\" ,'Yes ' ,'YES'],\"Yes\")"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"iV3CUiL_GPYp","executionInfo":{"status":"ok","timestamp":1733245591399,"user_tz":-120,"elapsed":389,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["\n","# Replace values in 'Vacc Status OCV' column\n","data['Vacc Status OCV'] = data['Vacc Status OCV'].replace(\n","    ['Not Stated', 'not stated',\"Not stated\",'Unvaccinated '],'Unvaccinated')\n","data['Vacc Status OCV'] = data['Vacc Status OCV'].replace(['Vaccinated ','Yes'],'Vaccinated')"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"QQo5luzJ2xeC","executionInfo":{"status":"ok","timestamp":1733245592882,"user_tz":-120,"elapsed":2,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# Replace values in 'Abdominal Pain/Cramps' column\n","data['Abdominal Pain/Cramps'] = data['Abdominal Pain/Cramps'].replace([\"yes\",\"YES\",'Yes '], \"Yes\")"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"R92klqT6CtOs","executionInfo":{"status":"ok","timestamp":1733245594055,"user_tz":-120,"elapsed":6,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["data['Vomiting'] = data[\"Vomiting\"].replace([\"yes\",\"YES\",'Yes ','Yee'], \"Yes\")"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"f7t-q0pKFF4E","executionInfo":{"status":"ok","timestamp":1733245605617,"user_tz":-120,"elapsed":397,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["data['Headache'] = data[\"Headache\"].replace([\"yes\",\"YES\",'Yes ','Yee'], \"Yes\")"]},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1733245606693,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"3HeVj9yrUkE8","outputId":"61da1b1f-1508-414c-90f9-3649dc0f86ee"},"outputs":[{"output_type":"stream","name":"stdout","text":["Unique values in 'Diarrhoea': ['Yes']\n","Unique values in 'Vacc Status OCV': ['Unvaccinated' 'Vaccinated']\n","Unique values in 'Vomiting': ['No' 'Yes']\n","Unique values in 'Constipation': ['No']\n","Unique values in 'Abdominal Pain/Cramps': ['No' 'Yes']\n"]}],"source":["#checking for inconsistences in the data\n","for col in ['Diarrhoea', 'Vacc Status OCV', 'Vomiting', 'Constipation', 'Abdominal Pain/Cramps']:\n","    print(f\"Unique values in '{col}': {data[col].unique()}\")"]},{"cell_type":"markdown","metadata":{"id":"dDyWWcyTWhX1"},"source":["All the inconsistences are now sorted"]},{"cell_type":"markdown","metadata":{"id":"1gdyMGqXY86v"},"source":["##EXPLORATORY DATA ANALYSIS##\n","\n","exploratory data analysis is defined as the process of understanding the data through graphical presentation and summaries and coming up with data driven insights"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":275},"executionInfo":{"elapsed":920,"status":"ok","timestamp":1733245614380,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"VmN_TFJ5effF","outputId":"f30f3759-92e4-4671-8f29-dbf0d71b2f56"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Unnamed: 0   Age Sex        Suburb   District Diarrhoea  \\\n","958            1st Episode  32.0   F     Glen Norah   Western       Yes   \n","1596            ?Duplicate  25.0   M      Kuwadzana  Northern       Yes   \n","1947  Readmission and died  41.0   F      Kuwadzana  Northern       Yes   \n","1995          Readmission   51.0   F  Southlea Park  Southern       Yes   \n","2043           Readmission   1.0   F      Kuwadzana  Northern       Yes   \n","\n","     Headache Vomiting Abdominal Pain/Cramps Dehydration Constipation  \\\n","958        No       No                    No          No           No   \n","1596       No       No                   Yes          No           No   \n","1947       No      Yes                    No          No           No   \n","1995       No       No                    No          No           No   \n","2043       No       No                    No          No           No   \n","\n","     Case status  Specimen Vacc Status OCV If Died place of Death  \\\n","958     Negative     Stool    Unvaccinated                     No   \n","1596    Negative       R/S    Unvaccinated                     No   \n","1947    Negative       R/S    Unvaccinated              Community   \n","1995    Negative  Not done    Unvaccinated                     No   \n","2043    Negative       R/S    Unvaccinated                     No   \n","\n","      Days B4 coming to HF  \n","958                      0  \n","1596                     1  \n","1947                     4  \n","1995                     3  \n","2043                     1  "],"text/html":["\n","  <div id=\"df-b20d43c6-d625-434a-97a6-a99d615719f6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Suburb</th>\n","      <th>District</th>\n","      <th>Diarrhoea</th>\n","      <th>Headache</th>\n","      <th>Vomiting</th>\n","      <th>Abdominal Pain/Cramps</th>\n","      <th>Dehydration</th>\n","      <th>Constipation</th>\n","      <th>Case status</th>\n","      <th>Specimen</th>\n","      <th>Vacc Status OCV</th>\n","      <th>If Died place of Death</th>\n","      <th>Days B4 coming to HF</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>958</th>\n","      <td>1st Episode</td>\n","      <td>32.0</td>\n","      <td>F</td>\n","      <td>Glen Norah</td>\n","      <td>Western</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Negative</td>\n","      <td>Stool</td>\n","      <td>Unvaccinated</td>\n","      <td>No</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1596</th>\n","      <td>?Duplicate</td>\n","      <td>25.0</td>\n","      <td>M</td>\n","      <td>Kuwadzana</td>\n","      <td>Northern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Negative</td>\n","      <td>R/S</td>\n","      <td>Unvaccinated</td>\n","      <td>No</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1947</th>\n","      <td>Readmission and died</td>\n","      <td>41.0</td>\n","      <td>F</td>\n","      <td>Kuwadzana</td>\n","      <td>Northern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Negative</td>\n","      <td>R/S</td>\n","      <td>Unvaccinated</td>\n","      <td>Community</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Readmission</td>\n","      <td>51.0</td>\n","      <td>F</td>\n","      <td>Southlea Park</td>\n","      <td>Southern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Negative</td>\n","      <td>Not done</td>\n","      <td>Unvaccinated</td>\n","      <td>No</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2043</th>\n","      <td>Readmission</td>\n","      <td>1.0</td>\n","      <td>F</td>\n","      <td>Kuwadzana</td>\n","      <td>Northern</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Negative</td>\n","      <td>R/S</td>\n","      <td>Unvaccinated</td>\n","      <td>No</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b20d43c6-d625-434a-97a6-a99d615719f6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b20d43c6-d625-434a-97a6-a99d615719f6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b20d43c6-d625-434a-97a6-a99d615719f6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f3cc3650-1a90-4fa4-900f-602ae4d32ba3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3cc3650-1a90-4fa4-900f-602ae4d32ba3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f3cc3650-1a90-4fa4-900f-602ae4d32ba3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 56,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"1st Episode\",\n          \"?Duplicate\",\n          \"?? Readmission\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.454202203945783,\n        \"min\": 1.0,\n        \"max\": 90.0,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          67.0,\n          9.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Suburb \",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Dzivarasekwa\",\n          \"Ardbennie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"District\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Northern\",\n          \"Out of Harare\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Diarrhoea\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Headache\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vomiting\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Abdominal Pain/Cramps\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dehydration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Constipation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Case status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Positive Culture\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Specimen\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Stool\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vacc Status OCV\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Vaccinated\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"If Died place of Death\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Days B4 coming to HF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}],"source":["data.head()"]},{"cell_type":"code","execution_count":34,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1733245615671,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"XHzqdG2Ol94N","outputId":"9d87ab89-f7b9-432b-f301-6b0d5fedffd4"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 56 entries, 958 to 9821\n","Data columns (total 16 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   Unnamed: 0              56 non-null     object \n"," 1   Age                     56 non-null     float64\n"," 2   Sex                     56 non-null     object \n"," 3   Suburb                  56 non-null     object \n"," 4   District                56 non-null     object \n"," 5   Diarrhoea               56 non-null     object \n"," 6   Headache                56 non-null     object \n"," 7   Vomiting                56 non-null     object \n"," 8   Abdominal Pain/Cramps   56 non-null     object \n"," 9   Dehydration             56 non-null     object \n"," 10  Constipation            56 non-null     object \n"," 11  Case status             56 non-null     object \n"," 12  Specimen                56 non-null     object \n"," 13  Vacc Status OCV         56 non-null     object \n"," 14  If Died place of Death  56 non-null     object \n"," 15  Days B4 coming to HF    56 non-null     int64  \n","dtypes: float64(1), int64(1), object(14)\n","memory usage: 7.4+ KB\n"]}],"source":["data.info()"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":412,"status":"ok","timestamp":1733245623343,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"KIjFc9L4meUb","outputId":"d0a2219f-1f92-4bba-eeaf-98d318b245d6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Age  Days B4 coming to HF\n","count  56.000000             56.000000\n","mean   28.160714              1.482143\n","std    21.454202              1.348279\n","min     1.000000              0.000000\n","25%     9.000000              1.000000\n","50%    25.000000              1.000000\n","75%    42.000000              2.000000\n","max    90.000000              7.000000"],"text/html":["\n","  <div id=\"df-c9e1cac8-9a6f-4ac8-937e-bde471046b3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Days B4 coming to HF</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>56.000000</td>\n","      <td>56.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>28.160714</td>\n","      <td>1.482143</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>21.454202</td>\n","      <td>1.348279</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>9.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>25.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>42.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>90.000000</td>\n","      <td>7.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9e1cac8-9a6f-4ac8-937e-bde471046b3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c9e1cac8-9a6f-4ac8-937e-bde471046b3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c9e1cac8-9a6f-4ac8-937e-bde471046b3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5219de54-7239-4a26-be7e-ea573ec319a0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5219de54-7239-4a26-be7e-ea573ec319a0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5219de54-7239-4a26-be7e-ea573ec319a0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.461620862152458,\n        \"min\": 1.0,\n        \"max\": 90.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          28.160714285714285,\n          25.0,\n          56.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Days B4 coming to HF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.21858706637477,\n        \"min\": 0.0,\n        \"max\": 56.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          56.0,\n          1.4821428571428572,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}],"source":["data.describe()"]},{"cell_type":"markdown","metadata":{"id":"_CMCBixzm2Gx"},"source":["**Visualisations**\n","Now this stage we are now presenting data into visuals\n"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349},"executionInfo":{"elapsed":545,"status":"ok","timestamp":1733245630105,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"OqUu7V4fngW1","outputId":"91784969-ac3a-456f-c8dc-56fce51887de"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# prompt: PLOT THE COUnt plot for sex with hue  at the top leftand grid\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","plt.figure(figsize=(10, 6))\n","plt.subplot(2, 2, 1)\n","sns.countplot(x='Sex', hue='Sex', data=data)\n","plt.title('Count Plot of Sex with Case Status')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"2nNYeU8buQNJ"},"source":["from the graph above more females were tested for cholera as compared males, we can deduce that females are more likely to be affected by cholera"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"executionInfo":{"elapsed":708,"status":"ok","timestamp":1733245636261,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"kq5UKAJQu0a6","outputId":"f10c199f-cdb8-4b2f-9ff0-ed29d588c3d5"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#  plotting  the district  count plot of district with hue = Case status\n","\n","plt.figure(figsize=(10, 6))\n","sns.countplot(x='District', hue='Case status', data=data)\n","plt.title('District Count Plot with Case Status')\n","plt.xticks(rotation=45, ha='right')\n","plt.tight_layout()\n","plt.ylabel(\"Number Of People \")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"30nzS_MO0Yau"},"source":["People tested were from 4 Harare districts which are Southern, Northern, Western and Eastern. some people were not from Harare province and the few their districts were not mentioned.\n","\n","the Southern District has the greater pecentage of people who tested positive followed by those from out Harare since we are comparing the number tested people in a given and those were tested positive and negative\n","\n","People from the Sourthen are more prone to cholera as compared to other district since it has the hiest number of infected people."]},{"cell_type":"code","execution_count":38,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"executionInfo":{"elapsed":1352,"status":"ok","timestamp":1733245643434,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"YnDOm1Bh5H4u","outputId":"d68f9099-acd6-465d-9588-026f1c262ff7"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"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qXrsscdUvXr1W45boECBTMNOnjyphg0bqnz58urdu7cuXbqkpUuX6pFHHtEvv/yili1bWsZNSUlRu3bttHnzZlWuXFnPPfecEhIStHz5cvXs2VP79u3TpEmTbltzbGyswsPDtXfvXtWtW1f9+vWT2WzWTz/9pCeeeEJ///233nrrrUzT/fbbb5o8ebJCQ0PVr18/xcTEyM3NTZI0ZcoUHTp0SE2bNlXHjh2VlJSkX3/9VWPHjtWmTZv0yy+/5GhPzt2sz2effVbVqlXTAw88oFKlSunff//V6tWr1bt3bx0+fFgTJkywjHvu3Dk1aNBAV69eVYcOHdStWzclJSXpxIkTWrBggZ5//nkVLVrUMn6/fv00d+5cBQYGqlu3bipcuLB27NihN998U+vXr9e6dessh4auXbtWHTt2VMGCBfXwww8rICBAly5d0sGDBzVr1iyNGTPmtush3e+//67JkyerdevWeu6553Ts2DF988032rJli37++Wc1b95ckjRw4EC98847+uyzz/T0009nms+nn34qSRo0aFCOl713717t2bNHbdq0UenSpdWnTx+tWLFCn332WZZHH6T3//Lly+rYsaNq1qypiIgIdenSRR06dMhyGX/88Yfatm2rS5cuqV27duratatiYmL07bffKjQ0VCtXrsx22pvNnTtXaWlpeuKJJ1StWrXbjp/dYbwvvfSStm7dqo4dO6pDhw6W9+yuXbvUunVrXbt2TQ8//LCqVq2qQ4cOaeHChVq1apV++eUXNWjQ4LbLzYkePXpo165d6t69u0wmk1atWqWxY8dq9+7d+u677+Tk5HTbeXzzzTf65JNP1LJlSzVt2lRubm76+++/NXv2bH3//ffavXu3AgICMk23e/duvfPOO2rSpIn69++vqKgorVixQq1atdK+fftUqVIly7gxMTFq2rSpIiIiFBoaqtDQUJ07d06DBg1S27Zt7+g1f/bZZ5KkYcOGycvL65bj3rzdHzx4UCNHjtQDDzygjh07qkiRIoqKitJ3332nNWvW6Pvvv1f79u0t49/Jtpnbz8n/Sv8ciYiI0PXr12/7ORgWFqbY2Fh9+OGHqlWrljp37mx5rnbt2pKkS5cu6aWXXlLTpk3Vpk0bFS9eXOfOndP333+vDh066PPPP1f//v0l3TiXe8yYMfrggw8kSUOGDMk0v9wYOXKkJk+e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6QYAAACAuzBixAhJ0o8//qiOHTsqODhYlSpV0sCBA/X9999bxvv000/VqlUrhYSEqH79+nrjjTcUHx9vef706dN6+umnVbVqVYWEhKhly5Zav3695flDhw7pySefVIUKFVSrVi298MILunTpUrZ1/fzzz3rooYf0+OOPKygoSJUqVVLnzp31+uuvS7qxt3rZsmX66aefFBAQoICAAG3fvl2SNHHiRIWGhio4OFhNmjTRO++8o9TUVEnS0qVLNW3aNP3zzz+W6ZYuXapTp04pICBABw4csNRw5cqVDPONjY3V888/rxo1aig4OFjNmjXT0qVL77YF+Rp7ugEAAAAgly5fvqyNGzfqtddek6enZ6bnCxUqZPnb2dlZ48ePV5kyZXTy5EmNGDFCb731liZPnizpRnhPTU3VihUr5OnpqSNHjsjLy0vSjfDao0cPPf744xo7dqySkpI0ceJEDRw4UMuWLcuytuLFi2vHjh06ffq0AgMDMz0/aNAgHT16VHFxcZo2bZokqXDhwpIkLy8vvf/++/Lz89PBgwc1fPhweXt7a/DgwXr44Yd1+PBhbdq0SUuWLJEk+fj4KCYm5rbr691339WRI0e0cOFC+fr66sSJE0pKSrrtdPaM0A0AAAAAuRQZGSnDMBQSEnLbcQcMGGD5u3Tp0ho+fLhef/11S+g+e/asOnTooCpVqkiSypYtaxl/7ty5ql69ut544w3LsKlTp6pBgwY6fvy4goODMy3vlVdeUf/+/dWoUSOVL19e9erVU3h4uDp16iRnZ2d5eXnJ3d1dKSkpKlGiRIZphwwZkqHWiIgIrVq1SoMHD5aHh4e8vLzk4uKSabrbOXPmjKpXr65atWpZ5u3oCN0AAAAAkEuGYeR43C1btmjGjBk6fvy4rl27puvXryspKUmJiYny8PBQv3799MYbb2jz5s1q3ry5OnTooKpVq0qS/vnnH23fvl0VKlTINN+TJ09mGbpLliyp77//XocOHdKOHTu0Z88evfzyy1q8eLEWLVokZ+fszzZetWqV5syZo5MnTyo+Pl7Xr1+Xt7d3jl9rdp566ikNGDBAf/31l1q0aKF27dqpQYMGdz3f/IxzugEAAAAgl4KCguTk5KRjx47dcrxTp06pT58+qlKlij777DOtWbNGEydOlCSlpKRIkp544glt375d3bp106FDh9ShQwfNmTNHkpSQkKA2bdro559/zvBv27Ztaty48S2XXblyZfXp00fTp0/X4sWLtWXLFv3222/Zjr9792698MILCg8P15dffqmffvpJL7zwguWc7uxkFeLT0tIyPA4PD9fOnTs1YMAAXbhwQY899pjGjx9/y/naO0I3AAAAAORSkSJFFBYWpnnz5ikhISHT81euXJEk7d+/X2azWWPGjFG9evUUHBys8+fPZxo/ICBATz31lGbPnq2BAwfqq6++kiRVr15dhw8fVunSpRUUFJThX1bnkmcnfU95eq1ubm66fv16hnF2796twMBAvfTSS6pVq5bKly+vM2fOZBjHZDLJbDZnGObr6ytJunDhgmXY33//namGokWLqkePHpo+fbrGjh2rRYsW5bh+e8Th5ffI9QEP39PlnbqnS7vB5fPvbLBUAAAAwLYmTpyozp07q2PHjho2bJiqVKmi69eva8uWLZo/f742b96scuXKKTU1VXPmzFGbNm20a9cuLViwIMN8Ro8erfDwcJUvX15XrlzRr7/+ajlXvE+fPvrqq680ePBgDR48WIULF1ZkZKRWrVql9957Ty4uLpnqev3111WyZEmFhoaqVKlSunDhgj788EMVLVpU9erVkyQFBgZq06ZNOnbsmHx9feXj42MJ2atWrVKtWrW0fv16rVmzJsO8S5curaioKB04cED+/v7y8vKSh4eH6tatq5kzZ6pMmTKKjY3VO++8k2G6d999VzVr1lTFihWVkpKiX375JctD5h0Je7oBAAAA4C6ULVtWa9euVdOmTTV+/Hi1atVKjz32mLZt22a5SFq1atU0ZswYzZo1S+Hh4Vq5cmWGi6JJktls1siRIxUWFqZevXqpfPnymjRpkiTJz89P3377rcxms5544gm1atVKY8aMUcGCBbM9N7t58+b6448/NHDgQDVv3lz/93//pwIFCmjp0qWWvdK9evVScHCwOnTooBo1amjXrl1q27atBgwYoJEjR6pt27bavXt3hgurSVKHDh0UFhamHj16qEaNGvr2228lSdOmTVNaWprat2+vUaNGafjw4RmmM5lMmjx5slq3bq2uXbvKxcVFs2bNutsW5GtOxp2c+e9ALl68eNtzEvLSvd7TbQvs6c57Tk5OKlWqlM6dO3dHF+lA/kMvHQe9dBz00nHQS8dxu15evXpVBQsWtEFlyA2TyXRPM5e1ZPe+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oaSlpVFeXt7qfSsrKx8aV3BwMMOGDSMtLY3c3Nz71rlfj/T9BAQEYDQaSU1Npb6+3lqen59PcXEx4eHh1rK+fftSUlJiE9+1a9ceOAQ9NzfXZm765cuXuXTpEmFhYW2KTURExB7U0y0iIvKE5OXlUVtb+8B9swcNGoSbmxvp6elERkYSERFBUFAQO3fupLS0lH79+nH69Gmqq6tbnRsXF0d8fDzLli1j/PjxeHl5UVFRwcWLF7lz5w4bN258aGyLFy9m7dq1bNy4keHDh/P000/j4uKCyWTi7NmznD9/nuHDh//jZ3R0dGTevHl88sknJCQkEBUVhclk4ujRo3h6ejJ58mRr3XHjxnHo0CE++OADxo0bR2VlJampqfj5+VkXd2vJ29ub+Ph4JkyYQH19PUeOHMHV1ZWpU6f+Y1wiIiL2oqRbRETkCUlPT6dr164PHALu4OBAeHg46enpVFVV4erqyvLly0lKSuLkyZMYDAYiIiKYMWMG8fHxNvOpfX19Wb9+PXv37uXEiRNUVVVhNBoZOHAgr7766j/GZjQaWbNmDWlpaWRlZbF3717MZjOurq4EBASwZMkSIiMj2/Q5n3/+eZycnDh48CDJycl069aNkSNHEhsba7PlmK+vL4sWLWLPnj3s3LnTepyRkUFhYWGrdp977jkcHBw4fPgwlZWVBAUFsXDhQnr37t2muEREROzB0NTW8WIiIiLSIeTk5LBp0yYSExP/9RzszqCsrIxFixYRGxvLyy+/bO9wREREHonmdIuIiHRgZrPZ5thisfDdd9/h7OxMQECAnaISERGRttLwchERkQ5sx44dmM1mBg8eTH19PTk5OVy4cIE5c+b8q+26RERE5MlQ0i0iItKBhYSE8O2333L69Gnq6+vx9vZm4cKFTJw40d6hiYiISBtoTreIiIiIiIhIO9GcbhEREREREZF2oqRbREREREREpJ0o6RYRERERERFpJ0q6RURERERERNqJkm4RERERERGRdqKkW0RERERERKSdKOkWERERERERaSdKukVERERERETayf8AnYkyVNoTvFcAAAAASUVORK5CYII=\n"},"metadata":{}}],"source":["# Creating  age groups\n","bins = [0, 10, 20, 30, 40, 50, 60, 70, float('inf')]\n","labels = ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n","data['Age Group'] = pd.cut(data['Age'], bins=bins, labels=labels, right=False)\n","\n","# Group by age group and case status, then count\n","age_case_counts = data.groupby(['Age Group', 'Case status']).size().unstack(fill_value=0)\n","\n","# Plotting\n","age_case_counts.plot(kind='bar', stacked=True, figsize=(10, 6))\n","plt.title('Cholera Cases by Age Group and Case Status')\n","plt.xlabel('Age Group')\n","plt.ylabel('Number of Cases')\n","plt.xticks(rotation=45, ha='right')\n","plt.legend(title='Case Status')\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"CvMBF-VG7TA-"},"source":["People between the Age of 20-49 are more vulnerable to cholera because are the most active group and they need to be taught more precaution measures in order to minimize the number of infections."]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":569},"executionInfo":{"elapsed":899,"status":"ok","timestamp":1733245651240,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"FKXaBVXf9a65","outputId":"bda76825-4d22-4f4d-9cf3-ab9a1a15b16f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#plotting Vaccination Status by  case status\n","\n","\n","plt.figure(figsize=(10, 6))\n","sns.countplot(x='Vacc Status OCV', hue='Case status', data=data)\n","plt.title('Vaccination Status By Case Status')\n","plt.xlabel('Vaccination Status')\n","plt.ylabel('Number of Cases')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"fDomiAleAamt"},"source":["the vaccine is effective in preventing cholera since most of the people who were tested positive were not vaccinated.\n","The graph shows that few people were vaccinated and there is need to encourage people to get vaccinated through awareness campaigns."]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":3104,"status":"ok","timestamp":1733245660904,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"ck4j9fsQCKDC","outputId":"18109784-4f31-4ac6-9ac4-cf02c33cc796"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# checking the effects of cholera symptoms on cholera infection status\n","\n","plt.figure(figsize=(10, 6))\n","sns.countplot(x='Diarrhoea', hue='Case status', data=data)\n","plt.title('Diarrhoea by Case Status')\n","plt.xlabel('Diarrhoea')\n","plt.ylabel('Number of Cases')\n","plt.show()\n","\n","plt.figure(figsize=(10, 6))\n","sns.countplot(x='Headache', hue='Case status', data=data)\n","plt.title('Headache by Case Status')\n","plt.xlabel('Headache')\n","plt.ylabel('Number of Cases')\n","plt.show()\n","\n","plt.figure(figsize=(10, 6))\n","sns.countplot(x='Vomiting', hue='Case status', data=data)\n","plt.title('Vomiting by Case Status')\n","plt.xlabel('Vomiting')\n","plt.ylabel('Number of Cases')\n","plt.show()\n","\n","plt.figure(figsize=(10, 6))\n","sns.countplot(x='Abdominal Pain/Cramps', hue='Case status', data=data)\n","plt.title('Abdominal Pain/Cramps by Case Status')\n","plt.xlabel('Abdominal Pain/Cramps')\n","plt.ylabel('Number of Cases')\n","plt.show()\n","\n","plt.figure(figsize=(10, 6))\n","sns.countplot(x='Dehydration', hue='Case status', data=data)\n","plt.title('Dehydration by Case Status')\n","plt.xlabel('Dehydration')\n","plt.ylabel('Number of Cases')\n","plt.show()\n","\n","plt.figure(figsize=(10, 6))\n","sns.countplot(x='Constipation', hue='Case status', data=data)\n","plt.title('Constipation by Case Status')\n","plt.xlabel('Constipation')\n","plt.ylabel('Number of Cases')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"ORLCFLYXFio0"},"source":["the main sympton of cholera is diarrhoea, vomiting, dehydration, cramps and headache, constipation has no effect on the cholera infection status"]},{"cell_type":"markdown","metadata":{"id":"1WawyF-RHkjh"},"source":["## Results from the Exploratory data Analysis##\n","\n","\n","\n","1.   the groups which are most vulnerable to cholera are people of the age 20-49, females and also hotspot districts in harare are Southern and Western so there is need to allocate more resource to these areas for cholera prevention and also encourage people in these areas to improve on hygiene.\n","\n","2. Vaccine used in 2023/2024 cholera prevention was effective though few people were vaccinated so there is need to educate people on the importants of being vaccinated against cholera.\n","\n","3. Hotspot areas areas they need close monitoring interms of waste management and access to clean water by residence so that the areas will not remain prone to cholera.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"AWOAxzHpLCFO"},"source":["## Feature Engineering For Model Development##\n","\n","This is the process of selecting, creating and transforming important features inorder to develop a robust and more accurate model"]},{"cell_type":"code","execution_count":41,"metadata":{"id":"muEu2UKkLpMZ","executionInfo":{"status":"ok","timestamp":1733245668995,"user_tz":-120,"elapsed":401,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["# Selecting features for X\n","X = data[['Diarrhoea', 'Vomiting', 'Dehydration', 'Abdominal Pain/Cramps', 'Headache', 'Age']]\n","\n","# Converting categorical features to numerical using Label Encoding\n","label_encoders = {}\n","for column in ['Diarrhoea', 'Vomiting', 'Dehydration', 'Abdominal Pain/Cramps', 'Headache']:\n","    le = LabelEncoder()\n","    X[column] = le.fit_transform(X[column])\n","    label_encoders[column] = le\n","\n","# Select the target variable y\n","y = data['Case status']\n","\n","# Convert target variable to numerical using Label Encoding\n","le_y = LabelEncoder()\n","y = le_y.fit_transform(y)"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":753,"status":"ok","timestamp":1733245675871,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"uU9MLps0Nvrd","outputId":"7ce72ffb-69da-4061-ff91-264bb3e5ba9f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Encoded X features:\n","      Diarrhoea  Vomiting  Dehydration  Abdominal Pain/Cramps  Headache   Age\n","958           0         0            0                      0         0  32.0\n","1596          0         0            0                      1         0  25.0\n","1947          0         1            0                      0         0  41.0\n","1995          0         0            0                      0         0  51.0\n","2043          0         0            0                      0         0   1.0\n","\n","Encoded y (Case Status):\n","[0 0 0 0 0]\n"]}],"source":["# Printing the encoded values for 'x'\n","print(\"Encoded X features:\")\n","print(X.head())\n","\n","# Print encoded values for 'y'\n","print(\"\\nEncoded y (Case Status):\")\n","print(y[:5])"]},{"cell_type":"markdown","metadata":{"id":"LUQVH-xCPAF2"},"source":["** Feature Transformation**\n","\n","Transforming the age into a form that can be understood better by the machine learning algorithms in order to improve on its performances"]},{"cell_type":"code","execution_count":43,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":409,"status":"ok","timestamp":1733245686412,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"PnmuuniiPpVf","outputId":"1297cec7-2523-4802-ee23-8dc0abad0baa"},"outputs":[{"output_type":"stream","name":"stdout","text":["958     0.180572\n","1596   -0.148657\n","1947    0.603867\n","1995    1.074194\n","2043   -1.277443\n","Name: Age, dtype: float64\n"]}],"source":["# transforming  the age\n","\n","# Initialize StandardScaler\n","scaler = StandardScaler()\n","\n","# Fit and transform the 'Age' column\n","X['Age'] = scaler.fit_transform(X[['Age']])\n","\n","# Print the transformed 'Age' column\n","print(X['Age'].head())"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1733245687892,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"9jgl0NT7QeSO","outputId":"6a1c6514-009a-4f16-c817-04c2871c1b13"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Case status\n","Negative            87.5\n","Positive Culture    12.5\n","Name: proportion, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>proportion</th>\n","    </tr>\n","    <tr>\n","      <th>Case status</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Negative</th>\n","      <td>87.5</td>\n","    </tr>\n","    <tr>\n","      <th>Positive Culture</th>\n","      <td>12.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":44}],"source":["# Calculating the ratio of positive and negative cases\n","case_status_counts = data['Case status'].value_counts(normalize=True) * 100\n","\n","# Print the percentages\n","case_status_counts"]},{"cell_type":"markdown","metadata":{"id":"UKX_kQxpQ1wj"},"source":["Our data is imbalance the ratio of negative is 92.04 so there is need to correct this because it may affect the peformance of our model"]},{"cell_type":"markdown","metadata":{"id":"q-IvdY7_TXWg"},"source":["## Now Applying the Smote for over Sampling##\n","\n","With our training data created, now we need  up-sample the positive case status using the SMOTE algorithm(Synthetic Minority Oversampling Technique).\n","\n","SMOTE: Works by generating synthetic samples from the minor class (positive) instead of creating copies. Randomly choosing one of the k-nearest-neighbors and using it to create a similar, but randomly tweaked, new observations.\n"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":848,"status":"ok","timestamp":1733245696441,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"IGX1rNiDUwET","outputId":"983a4357-5451-4fc8-812b-fa61ea8639de"},"outputs":[{"output_type":"stream","name":"stdout","text":["0    49\n","1    49\n","Name: count, dtype: int64\n"]}],"source":["\n","from imblearn.over_sampling import SMOTE\n","\n","# Initializing SMOTE\n","smote = SMOTE(random_state=42)\n","\n","# Applying SMOTE to oversample the minority class\n","X_resampled, y_resampled = smote.fit_resample(X, y)\n","\n","# Print the class distribution after oversampling\n","print(pd.Series(y_resampled).value_counts())"]},{"cell_type":"markdown","metadata":{"id":"iHQmjHf9VSlH"},"source":["now our data is now balanced\n","\n","Then lets split the data into training and test\n","\n"]},{"cell_type":"code","execution_count":46,"metadata":{"id":"mZDfnumTWbmY","executionInfo":{"status":"ok","timestamp":1733245703516,"user_tz":-120,"elapsed":5,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"}}},"outputs":[],"source":["#splitting the resampled data into train test\n","X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, test_size=0.2, random_state=42)"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":450,"status":"ok","timestamp":1733245705779,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"-n1TMKZqWqlX","outputId":"9d97e87b-8f7c-448d-98f9-a27e632566a4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of X_train: (78, 6)\n","Shape of X_test: (20, 6)\n","Shape of y_train: (78,)\n","Shape of y_test: (20,)\n"]}],"source":["#viewing the shape of the train and test data\n","\n","print(\"Shape of X_train:\", X_train.shape)\n","print(\"Shape of X_test:\", X_test.shape)\n","print(\"Shape of y_train:\", y_train.shape)\n","print(\"Shape of y_test:\", y_test.shape)"]},{"cell_type":"markdown","metadata":{"id":"3IgBjNcvXrpe"},"source":["##Model Building##\n","  A Random forest model has developed to classify the case status as positive  and negative since it is a supervised learning model and a classification is a supervice problem.\n","  \n"]},{"cell_type":"code","execution_count":48,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":413,"status":"ok","timestamp":1733245712508,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"q2E3zpMZu5E9","outputId":"d0835856-0f5c-4a03-a4b5-8957e46dddff"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of Random Forest: 0.8\n","              precision    recall  f1-score   support\n","\n","           0       0.75      0.90      0.82        10\n","           1       0.88      0.70      0.78        10\n","\n","    accuracy                           0.80        20\n","   macro avg       0.81      0.80      0.80        20\n","weighted avg       0.81      0.80      0.80        20\n","\n","[[9 1]\n"," [3 7]]\n"]}],"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","# Initialize the Random Forest Classifier\n","rf_classifier = RandomForestClassifier(random_state=42)\n","\n","# Train the model\n","rf_classifier.fit(X_train, y_train)\n","\n","# Make predictions on the test set\n","y_pred_rf = rf_classifier.predict(X_test)\n","\n","from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n","\n","# Evaluate the model\n","accuracy_rf = accuracy_score(y_test, y_pred_rf)\n","print(f\"Accuracy of Random Forest: {accuracy_rf}\")\n","print(classification_report(y_test, y_pred_rf))\n","print(confusion_matrix(y_test, y_pred_rf))"]},{"cell_type":"markdown","metadata":{"id":"e9n238hTbfp1"},"source":["the percentage accuracy of the model is 79.57% which is not perfect so there is need for parameter tuning in order to improve on model peformance.\n"]},{"cell_type":"markdown","metadata":{"id":"dYliDCMKv6PE"},"source":["## Fine Tuning the model##\n","\n","the model was fine tuned using the k-fold which work by splitting the data into subsets and use those subsets for training the mode and the evaluate the trained model using accuracy or loss."]},{"cell_type":"code","execution_count":49,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1471,"status":"ok","timestamp":1733245723187,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"7XJ14EwqwkCl","outputId":"61a13470-b733-44c8-931c-f20978c7932f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cross-validation scores: [0.8        0.9        0.6        0.89473684 0.63157895]\n","Mean accuracy: 0.765263157894737\n","Standard deviation of accuracy: 0.12752057028132893\n"]}],"source":["# prompt: fine tune the model using the k fold\n","\n","from sklearn.model_selection import KFold, cross_val_score\n","\n","# Initialize KFold with 5 splits\n","kf = KFold(n_splits=5, shuffle=True, random_state=42)\n","\n","# Perform cross-validation\n","scores = cross_val_score(rf_classifier, X_resampled, y_resampled, cv=kf, scoring='accuracy')\n","\n","# Print the cross-validation scores\n","print(\"Cross-validation scores:\", scores)\n","print(\"Mean accuracy:\", scores.mean())\n","print(\"Standard deviation of accuracy:\", scores.std())"]},{"cell_type":"code","execution_count":50,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":569},"executionInfo":{"elapsed":1715,"status":"ok","timestamp":1733245731853,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"Og_E3cH2H_cD","outputId":"a9ec2c55-ee5d-4db0-fad5-ea6e7bb05568"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#  computing a confusion matrix and plot\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","\n","\n","cm = confusion_matrix(y_test, y_pred_rf)\n","\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',\n","            xticklabels=['Predicted Negative', 'Predicted Positive'],\n","            yticklabels=['Actual Negative', 'Actual Positive'])\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted Label')\n","plt.ylabel('True Label')\n","plt.show()"]},{"cell_type":"code","execution_count":51,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":392,"status":"ok","timestamp":1733245737991,"user":{"displayName":"Luckmore Sori","userId":"14510323795650005513"},"user_tz":-120},"id":"1DV8-XjFyECR","outputId":"a0fa18cd-e41a-47bc-e12a-260fd4b375ef"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/drive/MyDrive/cholera_model.sav']"]},"metadata":{},"execution_count":51}],"source":["# save the model\n","\n","import joblib\n","\n","joblib.dump(rf_classifier, '/content/drive/MyDrive/cholera_model.sav')"]},{"cell_type":"markdown","metadata":{"id":"m1IIlGKu8tEd"},"source":["**Model Deployment using Flask**"]},{"cell_type":"markdown","metadata":{"id":"i3Ly4sU-IDGm"},"source":["##DEPLOYED Model LINK##\n","click here to access the *model*"]},{"cell_type":"markdown","metadata":{"id":"yhG4qZ2mIlJX"},"source":["##Conclusion And Remarks##\n","\n","the RandomForest model develop was trained using harare cholera linelist, fine tuned using K fold technigue and then evaluated using a confusion matrix and accuracy score which is *84%* and delopyed using streamlit. the independent variables used are Diarrhoea, Vomiting, Dehydration, Abdominal Pain/Cramps, Headache and Age.\n","\n","##References##\n","\n","  1. Health Information Office(608), qnanyanga@gmail.com\n","  2. Jason Brownlee, 2021.SMOTE for Imbalanced Classification with Python. https://machinelearningmastery.com/smote-oversampling-for-imbalanced-classification/\n"]}],"metadata":{"colab":{"provenance":[{"file_id":"1kNco_KEzdn7enaZdZGiN5loOQFzbyj3M","timestamp":1733177860823}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}